calculus:
  r1: [["p1 and p2"],["p1"]]
  r2: [["p1 and p2"],["p2"]]
  r3: [["neg(p1 and p2)"],["neg p1", "p1"]]
  r4: [["neg(p1 and p2)"],["neg p2", "p2"]]
  r8: [["neg p1", "neg p2"],["neg(p1 and p2)"]]
  r11: [["neg p1", "p2"],["neg(p1 and p2)"]]
  r13: [["neg p2", "p1"],["neg(p1 and p2)"]]
  r18: [["p1", "p2"],["p1 and p2"]]
  r5: [["neg neg p1"],["p1"]]
  r10: [["neg p1", "p1"],[]]
  r17: [["p1"],["neg neg p1"]]
  r6: [["neg(p1 or p2)"],["neg p1"]]
  r7: [["neg(p1 or p2)"],["neg p2"]]
  r9: [["neg p1", "neg p2"],["neg(p1 or p2)"]]
  r12: [["neg p1", "p2"],["p1 or p2"]]
  r14: [["neg p2", "p1"],["p1 or p2"]]
  r15: [["p1 or p2"],["neg p1", "p1"]]
  r16: [["p1 or p2"],["neg p2", "p2"]]
  r19: [["p1", "p2"],["p1 or p2"]]
analyticity_formulas: ["neg p","p"]
simplify_overlap: false
simplify_dilution: false
simplify_by_cuts: false
simplify_by_subrule_deriv: 0
prem_conc_correspondence: [[0,1]]
sequent_dset_correspondence: [0,1]
simplify_max_level: 0
derive:
  r: [[p],[p and q]]
  r2: [[],[]]
    # write queries as rulename: rule-description
